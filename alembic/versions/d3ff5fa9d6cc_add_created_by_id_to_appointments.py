"""Add created_by_id to appointments

Revision ID: d3ff5fa9d6cc
Revises: b833b548f960
Create Date: 2024-12-24 15:15:13.332956

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd3ff5fa9d6cc'
down_revision: Union[str, None] = 'b833b548f960'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_patient_histories_id', table_name='patient_histories')
    op.drop_table('patient_histories')
    op.drop_index('ix_doctor_services_id', table_name='doctor_services')
    op.drop_index('ix_doctor_services_service_name', table_name='doctor_services')
    op.drop_table('doctor_services')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_billings_id', table_name='billings')
    op.drop_table('billings')
    op.drop_index('ix_doctors_id', table_name='doctors')
    op.drop_index('ix_doctors_name', table_name='doctors')
    op.drop_table('doctors')
    op.drop_index('ix_patients_id', table_name='patients')
    op.drop_index('ix_patients_name', table_name='patients')
    op.drop_table('patients')
    op.drop_index('ix_appointments_id', table_name='appointments')
    op.drop_table('appointments')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('appointments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('appointments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('doctor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('appointment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], name='appointments_doctor_id_fkey'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name='appointments_patient_id_fkey'),
    sa.ForeignKeyConstraint(['service_id'], ['doctor_services.id'], name='appointments_service_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='appointments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_appointments_id', 'appointments', ['id'], unique=False)
    op.create_table('patients',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('patients_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='patients_pkey'),
    sa.UniqueConstraint('email', name='patients_email_key'),
    sa.UniqueConstraint('phone', name='patients_phone_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_patients_name', 'patients', ['name'], unique=False)
    op.create_index('ix_patients_id', 'patients', ['id'], unique=False)
    op.create_table('doctors',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('doctors_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('specialization', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='doctors_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_doctors_name', 'doctors', ['name'], unique=False)
    op.create_index('ix_doctors_id', 'doctors', ['id'], unique=False)
    op.create_table('billings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('appointment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('paid', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('payment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.id'], name='billings_appointment_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='billings_pkey')
    )
    op.create_index('ix_billings_id', 'billings', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('admin', 'reception', name='roleenum'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('doctor_services',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('doctor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('service_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.id'], name='doctor_services_doctor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='doctor_services_pkey')
    )
    op.create_index('ix_doctor_services_service_name', 'doctor_services', ['service_name'], unique=False)
    op.create_index('ix_doctor_services_id', 'doctor_services', ['id'], unique=False)
    op.create_table('patient_histories',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('medical_history', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('allergies', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], name='patient_histories_patient_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='patient_histories_pkey')
    )
    op.create_index('ix_patient_histories_id', 'patient_histories', ['id'], unique=False)
    # ### end Alembic commands ###
